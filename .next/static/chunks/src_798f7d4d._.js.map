{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,wIAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 26, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cn } from \"@/lib/utils\"\n\nfunction Card({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card\"\n      className={cn(\n        \"bg-card text-card-foreground flex flex-col gap-6 rounded-xl border py-6 shadow-sm\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-header\"\n      className={cn(\n        \"@container/card-header grid auto-rows-min grid-rows-[auto_auto] items-start gap-1.5 px-6 has-data-[slot=card-action]:grid-cols-[1fr_auto] [.border-b]:pb-6\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardTitle({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-title\"\n      className={cn(\"leading-none font-semibold\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardDescription({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-description\"\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardAction({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-action\"\n      className={cn(\n        \"col-start-2 row-span-2 row-start-1 self-start justify-self-end\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardContent({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-content\"\n      className={cn(\"px-6\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-footer\"\n      className={cn(\"flex items-center px-6 [.border-t]:pt-6\", className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardAction,\n  CardDescription,\n  CardContent,\n}\n"],"names":[],"mappings":";;;;;;;;;;AACA;;;AAEA,SAAS,KAAK,EAAE,SAAS,EAAE,GAAG,OAAoC;IAChE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,qFACA;QAED,GAAG,KAAK;;;;;;AAGf;KAXS;AAaT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,8JACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAoC;IACrE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,gBAAgB,EAAE,SAAS,EAAE,GAAG,OAAoC;IAC3E,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,kEACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,YAAY,EAAE,SAAS,EAAE,GAAG,OAAoC;IACvE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,QAAQ;QACrB,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,2CAA2C;QACxD,GAAG,KAAK;;;;;;AAGf;MARS","debugId":null}},
    {"offset": {"line": 141, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-all disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground shadow-xs hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-white shadow-xs hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\n        outline:\n          \"border bg-background shadow-xs hover:bg-accent hover:text-accent-foreground dark:bg-input/30 dark:border-input dark:hover:bg-input/50\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-xs hover:bg-secondary/80\",\n        ghost:\n          \"hover:bg-accent hover:text-accent-foreground dark:hover:bg-accent/50\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2 has-[>svg]:px-3\",\n        sm: \"h-8 rounded-md gap-1.5 px-3 has-[>svg]:px-2.5\",\n        lg: \"h-10 rounded-md px-6 has-[>svg]:px-4\",\n        icon: \"size-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nfunction Button({\n  className,\n  variant,\n  size,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"button\"> &\n  VariantProps<typeof buttonVariants> & {\n    asChild?: boolean\n  }) {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      data-slot=\"button\"\n      className={cn(buttonVariants({ variant, size, className }))}\n      {...props}\n    />\n  )\n}\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AACA;AACA;AAEA;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACvB,+bACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,aACE;YACF,SACE;YACF,WACE;YACF,OACE;YACF,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AAGF,SAAS,OAAO,EACd,SAAS,EACT,OAAO,EACP,IAAI,EACJ,UAAU,KAAK,EACf,GAAG,OAIF;IACD,MAAM,OAAO,UAAU,mKAAA,CAAA,OAAI,GAAG;IAE9B,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACvD,GAAG,KAAK;;;;;;AAGf;KAnBS","debugId":null}},
    {"offset": {"line": 204, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/progress.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\nimport { cn } from \"@/lib/utils\"\n\ntype ProgressProps = React.ComponentProps<typeof ProgressPrimitive.Root> & {\n  variant?: \"level\" | \"energy\" | \"experience\"\n}\n\nfunction Progress({\n  className,\n  value,\n  variant = \"experience\",\n  ...props\n}: ProgressProps) {\n  const indicatorClass = {\n    level: \"bg-gradient-to-r from-yellow-400 to-yellow-500\",\n    energy: \"bg-gradient-to-r from-green-400 to-green-500\",\n    experience: \"bg-gradient-to-r from-indigo-500 to-indigo-600\",\n  }[variant]\n\n  return (\n    <ProgressPrimitive.Root\n      data-slot=\"progress\"\n      className={cn(\n        \"relative h-4 w-full overflow-hidden rounded-full bg-gray-900/50 border-2 border-gray-600\",\n        className\n      )}\n      {...props}\n    >\n      <ProgressPrimitive.Indicator\n        data-slot=\"progress-indicator\"\n        className={cn(\"h-full w-full flex-1 transition-all duration-300\", indicatorClass)}\n        style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n      />\n    </ProgressPrimitive.Root>\n  )\n}\n\nexport { Progress }\n"],"names":[],"mappings":";;;;AAGA;AACA;AAJA;;;;AAUA,SAAS,SAAS,EAChB,SAAS,EACT,KAAK,EACL,UAAU,YAAY,EACtB,GAAG,OACW;IACd,MAAM,iBAAiB;QACrB,OAAO;QACP,QAAQ;QACR,YAAY;IACd,CAAC,CAAC,QAAQ;IAEV,qBACE,6LAAC,uKAAA,CAAA,OAAsB;QACrB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,4FACA;QAED,GAAG,KAAK;kBAET,cAAA,6LAAC,uKAAA,CAAA,YAA2B;YAC1B,aAAU;YACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,oDAAoD;YAClE,OAAO;gBAAE,WAAW,CAAC,YAAY,EAAE,MAAM,CAAC,SAAS,CAAC,EAAE,EAAE,CAAC;YAAC;;;;;;;;;;;AAIlE;KA5BS","debugId":null}},
    {"offset": {"line": 254, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/config/items.ts"],"sourcesContent":["export const SEEDS = {\n  parsnip: {\n    name: \"Parsnip Seeds\",\n    price: 20,\n    growthTime: 4, // days\n    sellPrice: 35,\n    season: [\"spring\"],\n    description: \"Takes 4 days to mature. Grows in Spring.\",\n    xp: 8\n  },\n  potato: {\n    name: \"Potato Seeds\",\n    price: 50,\n    growthTime: 6,\n    sellPrice: 80,\n    season: [\"spring\"],\n    description: \"Takes 6 days to mature. Grows in Spring.\",\n    xp: 12\n  },\n  cauliflower: {\n    name: \"Cauliflower Seeds\",\n    price: 80,\n    growthTime: 12,\n    sellPrice: 175,\n    season: [\"spring\"],\n    description: \"Takes 12 days to mature. Grows in Spring.\",\n    xp: 18\n  },\n  strawberry: {\n    name: \"Strawberry Seeds\",\n    price: 100,\n    growthTime: 8,\n    sellPrice: 120,\n    season: [\"spring\"],\n    description: \"Takes 8 days to mature. Grows in Spring.\",\n    xp: 15\n  }\n}\n\nexport const TOOLS = {\n  hoe: {\n    name: \"Hoe\",\n    description: \"Used to harvest crops\",\n    durability: 100,\n    energyCost: 2\n  },\n  wateringCan: {\n    name: \"Watering Can\",\n    description: \"Used to water crops\",\n    capacity: 100,\n    energyCost: 1\n  }\n}\n\nexport const LEVEL_THRESHOLDS = [\n  100,   // Level 1 -> 2\n  250,   // Level 2 -> 3\n  500,   // Level 3 -> 4\n  1000,  // Level 4 -> 5\n  2000,  // Level 5 -> 6\n  3500,  // Level 6 -> 7\n  5500,  // Level 7 -> 8\n  8000,  // Level 8 -> 9\n  11000, // Level 9 -> 10\n  15000  // Level 10 -> 11\n]\n\nexport type Seed = keyof typeof SEEDS\nexport type Tool = keyof typeof TOOLS\n"],"names":[],"mappings":";;;;;AAAO,MAAM,QAAQ;IACnB,SAAS;QACP,MAAM;QACN,OAAO;QACP,YAAY;QACZ,WAAW;QACX,QAAQ;YAAC;SAAS;QAClB,aAAa;QACb,IAAI;IACN;IACA,QAAQ;QACN,MAAM;QACN,OAAO;QACP,YAAY;QACZ,WAAW;QACX,QAAQ;YAAC;SAAS;QAClB,aAAa;QACb,IAAI;IACN;IACA,aAAa;QACX,MAAM;QACN,OAAO;QACP,YAAY;QACZ,WAAW;QACX,QAAQ;YAAC;SAAS;QAClB,aAAa;QACb,IAAI;IACN;IACA,YAAY;QACV,MAAM;QACN,OAAO;QACP,YAAY;QACZ,WAAW;QACX,QAAQ;YAAC;SAAS;QAClB,aAAa;QACb,IAAI;IACN;AACF;AAEO,MAAM,QAAQ;IACnB,KAAK;QACH,MAAM;QACN,aAAa;QACb,YAAY;QACZ,YAAY;IACd;IACA,aAAa;QACX,MAAM;QACN,aAAa;QACb,UAAU;QACV,YAAY;IACd;AACF;AAEO,MAAM,mBAAmB;IAC9B;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,MAAO,iBAAiB;CACzB","debugId":null}},
    {"offset": {"line": 340, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/contexts/GameContext.tsx"],"sourcesContent":["\"use client\"\n\nimport { createContext, useContext, useState, useEffect, ReactNode } from 'react'\nimport { SEEDS, TOOLS, LEVEL_THRESHOLDS, type Seed, type Tool } from \"../config/items\"\n\ninterface GameState {\n  player: {\n    level: number\n    experience: number\n    energy: number\n    coins: number\n    position: { x: number; y: number }\n    selectedTool: Tool | null\n    tools: {\n      [key in Tool]: {\n        durability?: number\n        capacity?: number\n      }\n    }\n  }\n  gameTime: {\n    hour: number\n    minute: number\n    day: number\n    season: string\n  }\n  inventory: {\n    items: Array<{\n      id: string\n      type: \"seed\" | \"crop\" | \"tool\"\n      name: string\n      quantity: number\n      data: any\n    }>\n    maxSlots: number\n  }\n  crops: {\n    [position: string]: {\n      type: Seed\n      stage: number\n      watered: boolean\n      plantedDay: number\n    } | null\n  }\n}\n\ninterface GameContextType {\n  gameState: GameState\n  updatePlayerPosition: (x: number, y: number) => void\n  updateEnergy: (amount: number) => void\n  updateCoins: (amount: number) => void\n  addExperience: (amount: number) => void\n  selectTool: (tool: Tool | null) => void\n  useTool: (position: string) => void\n  plantSeed: (position: string, seed: Seed) => void\n  waterCrop: (position: string) => void\n  harvestCrop: (position: string) => void\n  addItem: (item: Omit<GameState[\"inventory\"][\"items\"][0], \"id\">) => void\n  removeItem: (itemId: string, quantity: number) => void\n}\n\nconst defaultGameState: GameState = {\n  player: {\n    level: 1,\n    experience: 0,\n    energy: 100,\n    coins: 500,\n    position: { x: 400, y: 300 },\n    selectedTool: null,\n    tools: {\n      hoe: { durability: 100 },\n      wateringCan: { capacity: 100 }\n    }\n  },\n  gameTime: {\n    hour: 6,\n    minute: 0,\n    day: 1,\n    season: 'Spring'\n  },\n  inventory: {\n    items: [\n      {\n        id: \"parsnip-seed-1\",\n        type: \"seed\",\n        name: \"Parsnip Seeds\",\n        quantity: 5,\n        data: SEEDS.parsnip\n      }\n    ],\n    maxSlots: 20\n  },\n  crops: {}\n}\n\nconst GameContext = createContext<GameContextType | undefined>(undefined)\n\nexport function GameProvider({ children }: { children: ReactNode }) {\n  const [gameState, setGameState] = useState<GameState>(defaultGameState)\n\n  // Update game time\n  useEffect(() => {\n    const timer = setInterval(() => {\n      setGameState(prev => {\n        const newMinute = prev.gameTime.minute + 10\n        let newHour = prev.gameTime.hour\n        let newDay = prev.gameTime.day\n\n        // Update time\n        if (newMinute >= 60) {\n          newHour++\n        }\n        if (newHour >= 24) {\n          newHour = 0\n          newDay++\n        }\n\n        // Update crops\n        const newCrops = { ...prev.crops }\n        Object.entries(newCrops).forEach(([position, crop]) => {\n          if (crop && crop.watered) {\n            const seedData = SEEDS[crop.type]\n            const daysPassed = newDay - crop.plantedDay\n            const growthStage = Math.min(3, Math.floor((daysPassed / seedData.growthTime) * 4))\n            \n            newCrops[position] = {\n              ...crop,\n              stage: growthStage,\n              watered: false // Reset watering for the new day\n            }\n          }\n        })\n\n        return {\n          ...prev,\n          gameTime: {\n            ...prev.gameTime,\n            minute: newMinute % 60,\n            hour: newHour,\n            day: newDay\n          },\n          crops: newCrops\n        }\n      })\n    }, 1000) // 1 real second = 10 game minutes\n\n    return () => clearInterval(timer)\n  }, [])\n\n  const updatePlayerPosition = (x: number, y: number) => {\n    setGameState(prev => ({\n      ...prev,\n      player: {\n        ...prev.player,\n        position: { x, y }\n      }\n    }))\n  }\n\n  const updateEnergy = (amount: number) => {\n    setGameState(prev => ({\n      ...prev,\n      player: {\n        ...prev.player,\n        energy: Math.max(0, Math.min(100, prev.player.energy + amount))\n      }\n    }))\n  }\n\n  const updateCoins = (amount: number) => {\n    setGameState(prev => ({\n      ...prev,\n      player: {\n        ...prev.player,\n        coins: Math.max(0, prev.player.coins + amount)\n      }\n    }))\n  }\n\n  const addExperience = (amount: number) => {\n    setGameState(prev => {\n      const newExp = prev.player.experience + amount\n      let newLevel = prev.player.level\n      \n      while (newLevel <= LEVEL_THRESHOLDS.length && newExp >= LEVEL_THRESHOLDS[newLevel - 1]) {\n        newLevel++\n      }\n\n      return {\n        ...prev,\n        player: {\n          ...prev.player,\n          level: newLevel,\n          experience: newExp\n        }\n      }\n    })\n  }\n\n  const selectTool = (tool: Tool | null) => {\n    setGameState(prev => ({\n      ...prev,\n      player: {\n        ...prev.player,\n        selectedTool: tool\n      }\n    }))\n  }\n\n  const useTool = (position: string) => {\n    setGameState(prev => {\n      const tool = prev.player.selectedTool\n      if (!tool) return prev\n\n      const toolData = TOOLS[tool]\n      if (prev.player.energy < toolData.energyCost) return prev\n\n      const newState = { ...prev }\n      \n      // Update tool durability/capacity\n      if (\"durability\" in prev.player.tools[tool]) {\n        newState.player.tools[tool].durability! -= 1\n      }\n      if (\"capacity\" in prev.player.tools[tool] && tool === \"wateringCan\") {\n        newState.player.tools[tool].capacity! -= 1\n      }\n\n      // Update energy\n      newState.player.energy -= toolData.energyCost\n\n      return newState\n    })\n  }\n\n  const plantSeed = (position: string, seed: Seed) => {\n    setGameState(prev => {\n      const seedItem = prev.inventory.items.find(\n        item => item.type === \"seed\" && item.name === SEEDS[seed].name\n      )\n      if (!seedItem || seedItem.quantity <= 0) return prev\n\n      return {\n        ...prev,\n        crops: {\n          ...prev.crops,\n          [position]: {\n            type: seed,\n            stage: 0,\n            watered: false,\n            plantedDay: prev.gameTime.day\n          }\n        },\n        inventory: {\n          ...prev.inventory,\n          items: prev.inventory.items.map(item =>\n            item.id === seedItem.id\n              ? { ...item, quantity: item.quantity - 1 }\n              : item\n          ).filter(item => item.quantity > 0)\n        }\n      }\n    })\n  }\n\n  const waterCrop = (position: string) => {\n    setGameState(prev => {\n      if (!prev.crops[position]) return prev\n      \n      return {\n        ...prev,\n        crops: {\n          ...prev.crops,\n          [position]: {\n            ...prev.crops[position]!,\n            watered: true\n          }\n        }\n      }\n    })\n  }\n\n  const harvestCrop = (position: string) => {\n    setGameState(prev => {\n      const crop = prev.crops[position]\n      if (!crop) return prev\n\n      const seedData = SEEDS[crop.type]\n      const harvestedCrop = {\n        type: \"crop\" as const,\n        name: seedData.name.replace(\" Seeds\", \"\"),\n        quantity: 1,\n        data: {\n          sellPrice: seedData.sellPrice,\n          description: `A fresh ${seedData.name.replace(\" Seeds\", \"\").toLowerCase()}.`\n        }\n      }\n\n      const newState = {\n        ...prev,\n        crops: {\n          ...prev.crops,\n          [position]: null\n        },\n        inventory: {\n          ...prev.inventory,\n          items: [\n            ...prev.inventory.items,\n            {\n              ...harvestedCrop,\n              id: `${crop.type}-${Date.now()}`\n            }\n          ]\n        }\n      }\n\n      // Add experience for harvesting\n      addExperience(seedData.xp)\n\n      return newState\n    })\n  }\n\n  const addItem = (item: Omit<GameState[\"inventory\"][\"items\"][0], \"id\">) => {\n    setGameState(prev => {\n      const existingItem = prev.inventory.items.find(\n        i => i.type === item.type && i.name === item.name\n      )\n\n      if (existingItem) {\n        return {\n          ...prev,\n          inventory: {\n            ...prev.inventory,\n            items: prev.inventory.items.map(i =>\n              i.id === existingItem.id\n                ? { ...i, quantity: i.quantity + item.quantity }\n                : i\n            )\n          }\n        }\n      }\n\n      if (prev.inventory.items.length >= prev.inventory.maxSlots) return prev\n\n      return {\n        ...prev,\n        inventory: {\n          ...prev.inventory,\n          items: [\n            ...prev.inventory.items,\n            {\n              ...item,\n              id: `${item.type}-${Date.now()}`\n            }\n          ]\n        }\n      }\n    })\n  }\n\n  const removeItem = (itemId: string, quantity: number) => {\n    setGameState(prev => ({\n      ...prev,\n      inventory: {\n        ...prev.inventory,\n        items: prev.inventory.items.map(item =>\n          item.id === itemId\n            ? { ...item, quantity: item.quantity - quantity }\n            : item\n        ).filter(item => item.quantity > 0)\n      }\n    }))\n  }\n\n  return (\n    <GameContext.Provider value={{\n      gameState,\n      updatePlayerPosition,\n      updateEnergy,\n      updateCoins,\n      addExperience,\n      selectTool,\n      useTool,\n      plantSeed,\n      waterCrop,\n      harvestCrop,\n      addItem,\n      removeItem\n    }}>\n      {children}\n    </GameContext.Provider>\n  )\n}\n\nexport function useGame() {\n  const context = useContext(GameContext)\n  if (context === undefined) {\n    throw new Error('useGame must be used within a GameProvider')\n  }\n  return context\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 692, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/game/GameWorld.tsx"],"sourcesContent":["\"use client\"\n\nimport { useEffect, useRef, useState } from 'react'\nimport { useGame } from '@/contexts/GameContext'\nimport { SEEDS, type Seed } from '@/config/items'\nimport { Button } from \"@/components/ui/button\"\nimport { Card } from \"@/components/ui/card\"\n\ninterface Position {\n  x: number\n  y: number\n}\n\ninterface Plant {\n  x: number\n  y: number\n  stage: number\n  type: Seed\n}\n\ninterface GameWorldProps {\n  onMove?: (position: Position) => void\n}\n\nexport default function GameWorld({ onMove }: GameWorldProps) {\n  const canvasRef = useRef<HTMLCanvasElement>(null)\n  const [playerPos, setPlayerPos] = useState<Position>({ x: 400, y: 300 })\n  const [isMoving, setIsMoving] = useState(false)\n  const [direction, setDirection] = useState<string>('')\n  const [plants, setPlants] = useState<Plant[]>([])\n  const [selectedSeed, setSelectedSeed] = useState<Seed>('parsnip')\n  const [showControls, setShowControls] = useState(true)\n  const { gameState, updateEnergy } = useGame()\n\n  // Game loop\n  useEffect(() => {\n    const canvas = canvasRef.current\n    if (!canvas) return\n\n    const ctx = canvas.getContext('2d')\n    if (!ctx) return\n\n    // Set canvas size\n    canvas.width = 800\n    canvas.height = 600\n\n    // Game loop\n    let animationFrameId: number\n\n    const render = () => {\n      // Clear canvas\n      ctx.clearRect(0, 0, canvas.width, canvas.height)\n\n      // Draw background (grass pattern)\n      ctx.fillStyle = '#2d5a27'\n      ctx.fillRect(0, 0, canvas.width, canvas.height)\n\n      // Draw grid pattern\n      ctx.strokeStyle = '#234d1f'\n      ctx.lineWidth = 1\n      const gridSize = 32\n\n      for (let x = 0; x < canvas.width; x += gridSize) {\n        ctx.beginPath()\n        ctx.moveTo(x, 0)\n        ctx.lineTo(x, canvas.height)\n        ctx.stroke()\n      }\n\n      for (let y = 0; y < canvas.height; y += gridSize) {\n        ctx.beginPath()\n        ctx.moveTo(0, y)\n        ctx.lineTo(canvas.width, y)\n        ctx.stroke()\n      }\n\n      // Draw plants\n      plants.forEach(plant => {\n        ctx.fillStyle = '#8B4513' // soil color\n        ctx.fillRect(plant.x - 12, plant.y - 12, 24, 24)\n\n        if (plant.stage > 0) {\n          // Plant growth visualization\n          ctx.fillStyle = '#90EE90'\n          const height = (plant.stage / 4) * 20 // Max height is 20 pixels\n          ctx.fillRect(plant.x - 4, plant.y - height, 8, height)\n        }\n      })\n\n      // Draw player\n      ctx.fillStyle = '#FFFFFF'\n      ctx.beginPath()\n      ctx.arc(playerPos.x, playerPos.y, 16, 0, Math.PI * 2)\n      ctx.fill()\n\n      // Draw player name and selected seed\n      ctx.fillStyle = '#FFFFFF'\n      ctx.font = 'bold 16px Arial'\n      ctx.textAlign = 'center'\n      ctx.fillText('Player', playerPos.x, playerPos.y - 30)\n      if (selectedSeed) {\n        ctx.fillText(SEEDS[selectedSeed].name, playerPos.x, playerPos.y - 50)\n      }\n\n      // Request next frame\n      animationFrameId = requestAnimationFrame(render)\n    }\n\n    render()\n\n    return () => {\n      cancelAnimationFrame(animationFrameId)\n    }\n  }, [playerPos, plants, selectedSeed])\n\n  // Handle keyboard input\n  useEffect(() => {\n    const moveSpeed = 4\n\n    const handleKeyDown = (e: KeyboardEvent) => {\n      setIsMoving(true)\n      switch (e.key) {\n        case 'ArrowUp':\n        case 'w':\n          setDirection('up')\n          setPlayerPos(prev => ({\n            ...prev,\n            y: Math.max(16, prev.y - moveSpeed)\n          }))\n          break\n        case 'ArrowDown':\n        case 's':\n          setDirection('down')\n          setPlayerPos(prev => ({\n            ...prev,\n            y: Math.min(584, prev.y + moveSpeed)\n          }))\n          break\n        case 'ArrowLeft':\n        case 'a':\n          setDirection('left')\n          setPlayerPos(prev => ({\n            ...prev,\n            x: Math.max(16, prev.x - moveSpeed)\n          }))\n          break\n        case 'ArrowRight':\n        case 'd':\n          setDirection('right')\n          setPlayerPos(prev => ({\n            ...prev,\n            x: Math.min(784, prev.x + moveSpeed)\n          }))\n          break\n        case ' ': // Spacebar to plant\n          if (gameState.player.energy >= 5) {\n            const newPlant: Plant = {\n              x: playerPos.x,\n              y: playerPos.y,\n              stage: 0,\n              type: selectedSeed\n            }\n            setPlants(prev => [...prev, newPlant])\n            updateEnergy(-5)\n          }\n          break\n        case '1':\n          setSelectedSeed('parsnip')\n          break\n        case '2':\n          setSelectedSeed('potato')\n          break\n        case '3':\n          setSelectedSeed('cauliflower')\n          break\n        case '4':\n          setSelectedSeed('strawberry')\n          break\n        case 'h': // Toggle controls visibility\n          setShowControls(prev => !prev)\n          break\n      }\n    }\n\n    const handleKeyUp = () => {\n      setIsMoving(false)\n      setDirection('')\n    }\n\n    window.addEventListener('keydown', handleKeyDown)\n    window.addEventListener('keyup', handleKeyUp)\n\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown)\n      window.removeEventListener('keyup', handleKeyUp)\n    }\n  }, [onMove, gameState.player.energy, updateEnergy, playerPos, selectedSeed])\n\n  // Plant growth system\n  useEffect(() => {\n    const growthInterval = setInterval(() => {\n      setPlants(prevPlants =>\n        prevPlants.map(plant => ({\n          ...plant,\n          stage: plant.stage < 4 ? plant.stage + 1 : plant.stage\n        }))\n      )\n    }, 10000) // Plants grow every 10 seconds\n\n    return () => clearInterval(growthInterval)\n  }, [])\n\n  return (\n    <div className=\"relative w-full h-full flex items-center justify-center bg-gray-900\">\n      {showControls ? (\n        <Card className=\"absolute top-4 left-4 text-white text-lg z-10 bg-gray-800/80 p-4 rounded-lg\">\n          <div className=\"flex justify-between items-start mb-2\">\n            <h3 className=\"font-bold\">Controls:</h3>\n            <Button\n              variant=\"ghost\"\n              className=\"text-white hover:bg-gray-700/50 p-1 h-auto\"\n              onClick={() => setShowControls(false)}\n            >\n              ✕\n            </Button>\n          </div>\n          <p>WASD / Arrows - Move</p>\n          <p>Space - Plant (5 energy)</p>\n          <p>1-4 - Select Seeds</p>\n          <p>H - Toggle Controls</p>\n        </Card>\n      ) : (\n        <Button\n          variant=\"ghost\"\n          className=\"absolute top-4 left-4 text-white bg-gray-800/80 hover:bg-gray-700/80 z-10\"\n          onClick={() => setShowControls(true)}\n        >\n          Show Controls (H)\n        </Button>\n      )}\n      \n      <canvas\n        ref={canvasRef}\n        className=\"border-4 border-gray-700 rounded-lg shadow-lg\"\n        style={{ imageRendering: 'pixelated' }}\n      />\n      \n      {/* Mobile Controls */}\n      <div className=\"absolute bottom-4 right-4 md:hidden grid grid-cols-3 gap-2\">\n        <button\n          className=\"p-4 bg-white/20 rounded-lg active:bg-white/30 text-white font-bold text-2xl\"\n          onTouchStart={() => setDirection('up')}\n          onTouchEnd={() => setDirection('')}\n        >\n          ↑\n        </button>\n        <button\n          className=\"p-4 bg-white/20 rounded-lg active:bg-white/30 text-white font-bold text-2xl\"\n          onTouchStart={() => setDirection('down')}\n          onTouchEnd={() => setDirection('')}\n        >\n          ↓\n        </button>\n        <button\n          className=\"p-4 bg-white/20 rounded-lg active:bg-white/30 text-white font-bold text-2xl\"\n          onTouchStart={() => setDirection('left')}\n          onTouchEnd={() => setDirection('')}\n        >\n          ←\n        </button>\n        <button\n          className=\"p-4 bg-white/20 rounded-lg active:bg-white/30 text-white font-bold text-2xl\"\n          onTouchStart={() => setDirection('right')}\n          onTouchEnd={() => setDirection('')}\n        >\n          →\n        </button>\n      </div>\n    </div>\n  )\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AACA;;;AANA;;;;;;AAwBe,SAAS,UAAU,EAAE,MAAM,EAAkB;;IAC1D,MAAM,YAAY,CAAA,GAAA,6JAAA,CAAA,SAAM,AAAD,EAAqB;IAC5C,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAY;QAAE,GAAG;QAAK,GAAG;IAAI;IACtE,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACzC,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAU;IACnD,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAW,EAAE;IAChD,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAQ;IACvD,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACjD,MAAM,EAAE,SAAS,EAAE,YAAY,EAAE,GAAG,CAAA,GAAA,kIAAA,CAAA,UAAO,AAAD;IAE1C,YAAY;IACZ,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;+BAAE;YACR,MAAM,SAAS,UAAU,OAAO;YAChC,IAAI,CAAC,QAAQ;YAEb,MAAM,MAAM,OAAO,UAAU,CAAC;YAC9B,IAAI,CAAC,KAAK;YAEV,kBAAkB;YAClB,OAAO,KAAK,GAAG;YACf,OAAO,MAAM,GAAG;YAEhB,YAAY;YACZ,IAAI;YAEJ,MAAM;8CAAS;oBACb,eAAe;oBACf,IAAI,SAAS,CAAC,GAAG,GAAG,OAAO,KAAK,EAAE,OAAO,MAAM;oBAE/C,kCAAkC;oBAClC,IAAI,SAAS,GAAG;oBAChB,IAAI,QAAQ,CAAC,GAAG,GAAG,OAAO,KAAK,EAAE,OAAO,MAAM;oBAE9C,oBAAoB;oBACpB,IAAI,WAAW,GAAG;oBAClB,IAAI,SAAS,GAAG;oBAChB,MAAM,WAAW;oBAEjB,IAAK,IAAI,IAAI,GAAG,IAAI,OAAO,KAAK,EAAE,KAAK,SAAU;wBAC/C,IAAI,SAAS;wBACb,IAAI,MAAM,CAAC,GAAG;wBACd,IAAI,MAAM,CAAC,GAAG,OAAO,MAAM;wBAC3B,IAAI,MAAM;oBACZ;oBAEA,IAAK,IAAI,IAAI,GAAG,IAAI,OAAO,MAAM,EAAE,KAAK,SAAU;wBAChD,IAAI,SAAS;wBACb,IAAI,MAAM,CAAC,GAAG;wBACd,IAAI,MAAM,CAAC,OAAO,KAAK,EAAE;wBACzB,IAAI,MAAM;oBACZ;oBAEA,cAAc;oBACd,OAAO,OAAO;sDAAC,CAAA;4BACb,IAAI,SAAS,GAAG,UAAU,aAAa;;4BACvC,IAAI,QAAQ,CAAC,MAAM,CAAC,GAAG,IAAI,MAAM,CAAC,GAAG,IAAI,IAAI;4BAE7C,IAAI,MAAM,KAAK,GAAG,GAAG;gCACnB,6BAA6B;gCAC7B,IAAI,SAAS,GAAG;gCAChB,MAAM,SAAS,AAAC,MAAM,KAAK,GAAG,IAAK,GAAG,0BAA0B;;gCAChE,IAAI,QAAQ,CAAC,MAAM,CAAC,GAAG,GAAG,MAAM,CAAC,GAAG,QAAQ,GAAG;4BACjD;wBACF;;oBAEA,cAAc;oBACd,IAAI,SAAS,GAAG;oBAChB,IAAI,SAAS;oBACb,IAAI,GAAG,CAAC,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,GAAG;oBACnD,IAAI,IAAI;oBAER,qCAAqC;oBACrC,IAAI,SAAS,GAAG;oBAChB,IAAI,IAAI,GAAG;oBACX,IAAI,SAAS,GAAG;oBAChB,IAAI,QAAQ,CAAC,UAAU,UAAU,CAAC,EAAE,UAAU,CAAC,GAAG;oBAClD,IAAI,cAAc;wBAChB,IAAI,QAAQ,CAAC,yHAAA,CAAA,QAAK,CAAC,aAAa,CAAC,IAAI,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,GAAG;oBACpE;oBAEA,qBAAqB;oBACrB,mBAAmB,sBAAsB;gBAC3C;;YAEA;YAEA;uCAAO;oBACL,qBAAqB;gBACvB;;QACF;8BAAG;QAAC;QAAW;QAAQ;KAAa;IAEpC,wBAAwB;IACxB,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;+BAAE;YACR,MAAM,YAAY;YAElB,MAAM;qDAAgB,CAAC;oBACrB,YAAY;oBACZ,OAAQ,EAAE,GAAG;wBACX,KAAK;wBACL,KAAK;4BACH,aAAa;4BACb;qEAAa,CAAA,OAAQ,CAAC;wCACpB,GAAG,IAAI;wCACP,GAAG,KAAK,GAAG,CAAC,IAAI,KAAK,CAAC,GAAG;oCAC3B,CAAC;;4BACD;wBACF,KAAK;wBACL,KAAK;4BACH,aAAa;4BACb;qEAAa,CAAA,OAAQ,CAAC;wCACpB,GAAG,IAAI;wCACP,GAAG,KAAK,GAAG,CAAC,KAAK,KAAK,CAAC,GAAG;oCAC5B,CAAC;;4BACD;wBACF,KAAK;wBACL,KAAK;4BACH,aAAa;4BACb;qEAAa,CAAA,OAAQ,CAAC;wCACpB,GAAG,IAAI;wCACP,GAAG,KAAK,GAAG,CAAC,IAAI,KAAK,CAAC,GAAG;oCAC3B,CAAC;;4BACD;wBACF,KAAK;wBACL,KAAK;4BACH,aAAa;4BACb;qEAAa,CAAA,OAAQ,CAAC;wCACpB,GAAG,IAAI;wCACP,GAAG,KAAK,GAAG,CAAC,KAAK,KAAK,CAAC,GAAG;oCAC5B,CAAC;;4BACD;wBACF,KAAK;4BACH,IAAI,UAAU,MAAM,CAAC,MAAM,IAAI,GAAG;gCAChC,MAAM,WAAkB;oCACtB,GAAG,UAAU,CAAC;oCACd,GAAG,UAAU,CAAC;oCACd,OAAO;oCACP,MAAM;gCACR;gCACA;yEAAU,CAAA,OAAQ;+CAAI;4CAAM;yCAAS;;gCACrC,aAAa,CAAC;4BAChB;4BACA;wBACF,KAAK;4BACH,gBAAgB;4BAChB;wBACF,KAAK;4BACH,gBAAgB;4BAChB;wBACF,KAAK;4BACH,gBAAgB;4BAChB;wBACF,KAAK;4BACH,gBAAgB;4BAChB;wBACF,KAAK;4BACH;qEAAgB,CAAA,OAAQ,CAAC;;4BACzB;oBACJ;gBACF;;YAEA,MAAM;mDAAc;oBAClB,YAAY;oBACZ,aAAa;gBACf;;YAEA,OAAO,gBAAgB,CAAC,WAAW;YACnC,OAAO,gBAAgB,CAAC,SAAS;YAEjC;uCAAO;oBACL,OAAO,mBAAmB,CAAC,WAAW;oBACtC,OAAO,mBAAmB,CAAC,SAAS;gBACtC;;QACF;8BAAG;QAAC;QAAQ,UAAU,MAAM,CAAC,MAAM;QAAE;QAAc;QAAW;KAAa;IAE3E,sBAAsB;IACtB,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;+BAAE;YACR,MAAM,iBAAiB;sDAAY;oBACjC;8DAAU,CAAA,aACR,WAAW,GAAG;sEAAC,CAAA,QAAS,CAAC;wCACvB,GAAG,KAAK;wCACR,OAAO,MAAM,KAAK,GAAG,IAAI,MAAM,KAAK,GAAG,IAAI,MAAM,KAAK;oCACxD,CAAC;;;gBAEL;qDAAG,OAAO,+BAA+B;;YAEzC;uCAAO,IAAM,cAAc;;QAC7B;8BAAG,EAAE;IAEL,qBACE,6LAAC;QAAI,WAAU;;YACZ,6BACC,6LAAC,mIAAA,CAAA,OAAI;gBAAC,WAAU;;kCACd,6LAAC;wBAAI,WAAU;;0CACb,6LAAC;gCAAG,WAAU;0CAAY;;;;;;0CAC1B,6LAAC,qIAAA,CAAA,SAAM;gCACL,SAAQ;gCACR,WAAU;gCACV,SAAS,IAAM,gBAAgB;0CAChC;;;;;;;;;;;;kCAIH,6LAAC;kCAAE;;;;;;kCACH,6LAAC;kCAAE;;;;;;kCACH,6LAAC;kCAAE;;;;;;kCACH,6LAAC;kCAAE;;;;;;;;;;;qCAGL,6LAAC,qIAAA,CAAA,SAAM;gBACL,SAAQ;gBACR,WAAU;gBACV,SAAS,IAAM,gBAAgB;0BAChC;;;;;;0BAKH,6LAAC;gBACC,KAAK;gBACL,WAAU;gBACV,OAAO;oBAAE,gBAAgB;gBAAY;;;;;;0BAIvC,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBACC,WAAU;wBACV,cAAc,IAAM,aAAa;wBACjC,YAAY,IAAM,aAAa;kCAChC;;;;;;kCAGD,6LAAC;wBACC,WAAU;wBACV,cAAc,IAAM,aAAa;wBACjC,YAAY,IAAM,aAAa;kCAChC;;;;;;kCAGD,6LAAC;wBACC,WAAU;wBACV,cAAc,IAAM,aAAa;wBACjC,YAAY,IAAM,aAAa;kCAChC;;;;;;kCAGD,6LAAC;wBACC,WAAU;wBACV,cAAc,IAAM,aAAa;wBACjC,YAAY,IAAM,aAAa;kCAChC;;;;;;;;;;;;;;;;;;AAMT;GAhQwB;;QAQc,kIAAA,CAAA,UAAO;;;KARrB","debugId":null}},
    {"offset": {"line": 1089, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/game/Market.tsx"],"sourcesContent":["\"use client\"\n\nimport { useState, useEffect } from 'react'\nimport { Button } from \"@/components/ui/button\"\nimport { Card } from \"@/components/ui/card\"\nimport { useGame } from \"@/contexts/GameContext\"\n\nexport function Market() {\n  const [isOpen, setIsOpen] = useState(false)\n  const { gameState, updateCoins } = useGame()\n  const { player, inventory } = gameState\n\n  // Handle Escape key press\n  useEffect(() => {\n    const handleEscapeKey = (e: KeyboardEvent) => {\n      if (e.key === 'Escape' && isOpen) {\n        setIsOpen(false)\n      }\n    }\n\n    window.addEventListener('keydown', handleEscapeKey)\n    return () => window.removeEventListener('keydown', handleEscapeKey)\n  }, [isOpen])\n\n  const sellCrop = (itemId: string, price: number) => {\n    updateCoins(price)\n    // Remove item from inventory logic would be handled by GameContext\n  }\n\n  if (!isOpen) {\n    return (\n      <Button \n        className=\"w-full text-lg py-3 bg-yellow-600 hover:bg-yellow-700 text-white border-2 border-yellow-500\" \n        variant=\"outline\"\n        onClick={() => setIsOpen(true)}\n      >\n        Market\n      </Button>\n    )\n  }\n\n  return (\n    <div \n      className=\"fixed inset-0 bg-black/70 backdrop-blur-sm flex items-center justify-center z-50\"\n      onClick={(e) => {\n        // Close when clicking the backdrop\n        if (e.target === e.currentTarget) {\n          setIsOpen(false)\n        }\n      }}\n    >\n      <Card className=\"w-[500px] bg-gray-800/95 p-6 border-2 border-gray-600 shadow-2xl relative\">\n        <Button \n          variant=\"outline\"\n          className=\"absolute top-4 right-4 text-white border-gray-500 hover:bg-gray-700\"\n          onClick={() => setIsOpen(false)}\n        >\n          Close\n        </Button>\n\n        <div className=\"space-y-6\">\n          <h2 className=\"text-3xl font-bold text-white\">Market</h2>\n\n          <div className=\"space-y-4\">\n            <h3 className=\"text-xl font-semibold text-white\">Your Crops</h3>\n            <div className=\"space-y-3 max-h-[400px] overflow-y-auto pr-2\">\n              {inventory.items\n                .filter(item => item.type === \"crop\")\n                .map(item => (\n                  <div \n                    key={item.id} \n                    className=\"flex items-center justify-between bg-gray-700/50 p-4 rounded-lg border border-gray-600 hover:border-gray-500 transition-colors\"\n                  >\n                    <div>\n                      <p className=\"text-lg font-medium text-white\">{item.name}</p>\n                      <p className=\"text-sm text-gray-300\">Quantity: {item.quantity}</p>\n                    </div>\n                    <Button\n                      variant=\"outline\"\n                      className=\"bg-green-600 hover:bg-green-700 text-white border-green-500 ml-4\"\n                      onClick={() => sellCrop(item.id, item.data.sellPrice)}\n                    >\n                      Sell for {item.data.sellPrice} 🪙\n                    </Button>\n                  </div>\n                ))}\n              {inventory.items.filter(item => item.type === \"crop\").length === 0 && (\n                <div className=\"bg-gray-700/30 rounded-lg border border-gray-600 p-8\">\n                  <p className=\"text-gray-400 text-center text-lg\">\n                    No crops to sell yet.<br />\n                    Plant some seeds and wait for them to grow!\n                  </p>\n                </div>\n              )}\n            </div>\n          </div>\n\n          <div className=\"pt-4 border-t border-gray-600\">\n            <p className=\"text-gray-400 text-sm text-center\">\n              Tip: Press ESC to close this window\n            </p>\n          </div>\n        </div>\n      </Card>\n    </div>\n  )\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;;;AALA;;;;;AAOO,SAAS;;IACd,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACrC,MAAM,EAAE,SAAS,EAAE,WAAW,EAAE,GAAG,CAAA,GAAA,kIAAA,CAAA,UAAO,AAAD;IACzC,MAAM,EAAE,MAAM,EAAE,SAAS,EAAE,GAAG;IAE9B,0BAA0B;IAC1B,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;4BAAE;YACR,MAAM;oDAAkB,CAAC;oBACvB,IAAI,EAAE,GAAG,KAAK,YAAY,QAAQ;wBAChC,UAAU;oBACZ;gBACF;;YAEA,OAAO,gBAAgB,CAAC,WAAW;YACnC;oCAAO,IAAM,OAAO,mBAAmB,CAAC,WAAW;;QACrD;2BAAG;QAAC;KAAO;IAEX,MAAM,WAAW,CAAC,QAAgB;QAChC,YAAY;IACZ,mEAAmE;IACrE;IAEA,IAAI,CAAC,QAAQ;QACX,qBACE,6LAAC,qIAAA,CAAA,SAAM;YACL,WAAU;YACV,SAAQ;YACR,SAAS,IAAM,UAAU;sBAC1B;;;;;;IAIL;IAEA,qBACE,6LAAC;QACC,WAAU;QACV,SAAS,CAAC;YACR,mCAAmC;YACnC,IAAI,EAAE,MAAM,KAAK,EAAE,aAAa,EAAE;gBAChC,UAAU;YACZ;QACF;kBAEA,cAAA,6LAAC,mIAAA,CAAA,OAAI;YAAC,WAAU;;8BACd,6LAAC,qIAAA,CAAA,SAAM;oBACL,SAAQ;oBACR,WAAU;oBACV,SAAS,IAAM,UAAU;8BAC1B;;;;;;8BAID,6LAAC;oBAAI,WAAU;;sCACb,6LAAC;4BAAG,WAAU;sCAAgC;;;;;;sCAE9C,6LAAC;4BAAI,WAAU;;8CACb,6LAAC;oCAAG,WAAU;8CAAmC;;;;;;8CACjD,6LAAC;oCAAI,WAAU;;wCACZ,UAAU,KAAK,CACb,MAAM,CAAC,CAAA,OAAQ,KAAK,IAAI,KAAK,QAC7B,GAAG,CAAC,CAAA,qBACH,6LAAC;gDAEC,WAAU;;kEAEV,6LAAC;;0EACC,6LAAC;gEAAE,WAAU;0EAAkC,KAAK,IAAI;;;;;;0EACxD,6LAAC;gEAAE,WAAU;;oEAAwB;oEAAW,KAAK,QAAQ;;;;;;;;;;;;;kEAE/D,6LAAC,qIAAA,CAAA,SAAM;wDACL,SAAQ;wDACR,WAAU;wDACV,SAAS,IAAM,SAAS,KAAK,EAAE,EAAE,KAAK,IAAI,CAAC,SAAS;;4DACrD;4DACW,KAAK,IAAI,CAAC,SAAS;4DAAC;;;;;;;;+CAZ3B,KAAK,EAAE;;;;;wCAgBjB,UAAU,KAAK,CAAC,MAAM,CAAC,CAAA,OAAQ,KAAK,IAAI,KAAK,QAAQ,MAAM,KAAK,mBAC/D,6LAAC;4CAAI,WAAU;sDACb,cAAA,6LAAC;gDAAE,WAAU;;oDAAoC;kEAC1B,6LAAC;;;;;oDAAK;;;;;;;;;;;;;;;;;;;;;;;;sCAQrC,6LAAC;4BAAI,WAAU;sCACb,cAAA,6LAAC;gCAAE,WAAU;0CAAoC;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQ7D;GAnGgB;;QAEqB,kIAAA,CAAA,UAAO;;;KAF5B","debugId":null}},
    {"offset": {"line": 1324, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/app/easter-valley/page.tsx"],"sourcesContent":["\"use client\"\n\nimport { Card } from \"@/components/ui/card\"\nimport { Button } from \"@/components/ui/button\"\nimport { Progress } from \"@/components/ui/progress\"\nimport GameWorld from \"@/components/game/GameWorld\"\nimport { Market } from \"@/components/game/Market\"\nimport { GameProvider, useGame } from \"@/contexts/GameContext\"\nimport { SEEDS } from \"@/config/items\"\n\nfunction GameContent() {\n  const { gameState, updateEnergy, updateCoins, addExperience } = useGame()\n  const { player, gameTime } = gameState\n\n  const handleAction = (action: string) => {\n    switch (action) {\n      case 'farm':\n        updateEnergy(-10)\n        updateCoins(15)\n        addExperience(5)\n        break\n      case 'mine':\n        updateEnergy(-15)\n        updateCoins(25)\n        addExperience(8)\n        break\n      case 'fish':\n        updateEnergy(-8)\n        updateCoins(20)\n        addExperience(6)\n        break\n    }\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-b from-gray-900 to-gray-800 text-white\">\n      <div className=\"max-w-[1400px] mx-auto px-6 py-4\">\n        {/* Top Bar - Stats */}\n        <div className=\"fixed top-0 left-0 right-0 bg-gray-900/95 border-b-2 border-gray-600 p-4 z-50 backdrop-blur-sm shadow-lg\">\n          <div className=\"max-w-[1400px] mx-auto grid grid-cols-12 gap-6\">\n            <div className=\"col-span-3 flex items-center space-x-4\">\n              <Card className=\"bg-gray-800/90 border-2 border-gray-600 p-3 shadow-lg flex-1\">\n                <p className=\"text-base font-bold text-white\">Level {player.level}</p>\n                <Progress \n                  value={(player.experience / (player.level * 100)) * 100} \n                  className=\"h-3 mt-2\" \n                  variant=\"level\"\n                />\n              </Card>\n              \n              <Card className=\"bg-gray-800/90 border-2 border-gray-600 p-3 shadow-lg flex-1\">\n                <p className=\"text-base font-bold text-white\">Energy</p>\n                <Progress value={player.energy} className=\"h-3 mt-2\" variant=\"energy\" />\n              </Card>\n            </div>\n\n            <div className=\"col-span-6 flex justify-center\">\n              <Card className=\"bg-gray-800/90 border-2 border-gray-600 p-3 shadow-lg\">\n                <p className=\"text-base font-bold text-white text-center\">\n                  {gameTime.season} {gameTime.day}<br />\n                  {String(gameTime.hour).padStart(2, '0')}:{String(gameTime.minute).padStart(2, '0')}\n                </p>\n              </Card>\n            </div>\n\n            <div className=\"col-span-3 flex justify-end\">\n              <Card className=\"bg-gray-800/90 border-2 border-gray-600 p-3 shadow-lg\">\n                <p className=\"text-base font-bold text-white\">🪙 {player.coins}</p>\n              </Card>\n            </div>\n          </div>\n        </div>\n\n        {/* Game Content */}\n        <div className=\"mt-28\">\n          <div className=\"grid grid-cols-12 gap-6 items-start\">\n            {/* Left Sidebar - Inventory */}\n            <Card className=\"col-span-3 bg-gray-800/90 border-2 border-gray-600 p-6 shadow-lg sticky top-28 overflow-hidden\">\n              <h2 className=\"text-2xl font-bold mb-4 text-white\">Inventory</h2>\n              <div className=\"grid grid-cols-4 gap-3\">\n                {Array.from({ length: gameState.inventory.maxSlots }).map((_, i) => (\n                  <div\n                    key={i}\n                    className=\"aspect-square bg-gray-700/80 rounded-lg border-2 border-gray-600 hover:border-gray-400 transition-colors cursor-pointer shadow-md\"\n                  />\n                ))}\n              </div>\n            </Card>\n\n            {/* Main Game Area */}\n            <div className=\"col-span-6 bg-gray-800/90 rounded-xl border-2 border-gray-600 min-h-[600px] relative overflow-hidden shadow-2xl\">\n              <div className=\"absolute inset-0 bg-gradient-to-b from-transparent to-gray-900/20\"></div>\n              <GameWorld />\n            </div>\n\n            {/* Right Sidebar - Actions & Chat */}\n            <Card className=\"col-span-3 bg-gray-800/90 border-2 border-gray-600 p-6 shadow-lg sticky top-28 overflow-hidden\">\n              <div className=\"space-y-6\">\n                <div className=\"relative\">\n                  <h2 className=\"text-2xl font-bold mb-4 text-white\">Seeds</h2>\n                  <div className=\"space-y-3\">\n                    {Object.entries(SEEDS).map(([key, seed]) => (\n                      <Button \n                        key={key}\n                        className=\"w-full text-lg py-3 bg-green-600 hover:bg-green-700 text-white border-2 border-green-500\" \n                        variant=\"outline\"\n                        onClick={() => {\n                          if (player.coins >= seed.price) {\n                            updateCoins(-seed.price)\n                            // Add seed to inventory logic here\n                          }\n                        }}\n                        disabled={player.coins < seed.price}\n                      >\n                        {seed.name} ({seed.price} 🪙)\n                      </Button>\n                    ))}\n                    <Market />\n                  </div>\n                </div>\n\n                <div className=\"mt-6\">\n                  <h2 className=\"text-2xl font-bold mb-4 text-white\">Chat</h2>\n                  <div className=\"bg-gray-900/80 rounded-lg p-4 h-48 overflow-y-auto mb-3 border-2 border-gray-700\">\n                    <p className=\"text-lg text-gray-300\">Welcome to Easter Valley!</p>\n                  </div>\n                  <div className=\"flex gap-3\">\n                    <input\n                      type=\"text\"\n                      className=\"flex-1 bg-gray-700/80 rounded-lg px-4 py-2 text-lg text-white border-2 border-gray-600 focus:border-gray-400 focus:outline-none\"\n                      placeholder=\"Type a message...\"\n                    />\n                    <Button \n                      className=\"px-6 bg-indigo-600 hover:bg-indigo-700 text-white border-2 border-indigo-500\"\n                      variant=\"secondary\" \n                      size=\"lg\"\n                    >\n                      Send\n                    </Button>\n                  </div>\n                </div>\n              </div>\n            </Card>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default function EasterValley() {\n  return (\n    <GameProvider>\n      <GameContent />\n    </GameProvider>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}